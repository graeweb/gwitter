{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Gweet.js","components/GweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setpassword","newAccount","setnewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","alert","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Gweet","gweetObj","isOwner","editing","setEditing","text","newGweet","setNewGweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","createdAt","src","class","faTrash","faPencilAlt","GweetFactory","userObj","gweet","setGweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","respense","getDownloadURL","displayName","moment","format","date","Date","now","CreatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","gweets","setGweets","useEffect","onSnapshot","snapshot","gweetArray","docs","map","data","marginTop","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bd9da22.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/storage\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\n\r\nconst AuthForm = () =>{\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [newAccount, setnewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {target: {name,value}} = event;\r\n    if(name === \"email\"){\r\n      setEmail(value)\r\n    }else if(name === \"password\"){\r\n      setpassword(value)\r\n    }\r\n  }\r\n  const onSubmit = async(event) =>{\r\n    event.preventDefault();\r\n    try{\r\n      let data;\r\n      if (newAccount){\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email, password\r\n      )\r\n      }else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(\r\n          email, password\r\n        )\r\n      }\r\n    }catch(error){\r\n      setError(alert(error.message))\r\n    }\r\n  };\r\n  const toggleAccount = () => setnewAccount((prev) => !prev);\r\n  return(\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n          name=\"email\" \r\n          type=\"email\" \r\n          placeholder=\"Email\" \r\n          required \r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input \r\n          name=\"password\" \r\n          type=\"password\"\r\n          placeholder=\"Password\" \r\n          required \r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input className=\"authToggle\" type=\"submit\" value={ newAccount ? \"Create Account\" : \"Log In\" }/>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\" : \"Create Account\"}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { authService , firebaseInstance } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle ,faGithub} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n\r\n  const onSocialClick = async(event) =>{\r\n    const {\r\n      target:{name}\r\n    } = event;\r\n    let provider;\r\n    if(name === \"google\"){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    }else if(name === \"github\"){\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n  }\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm/>\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github  <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n)};\r\n\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Gweet = ({gweetObj,isOwner}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newGweet, setNewGweet] = useState(gweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure ypu want to delet this gweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`gweets/${gweetObj.id}`).delete();\r\n      if(gweetObj.attachmentUrl !== \"\" ){\r\n      await storageService.refFromURL(gweetObj.attachmentUrl).delete();\r\n      }\r\n      }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`gweets/${gweetObj.id}`).update({\r\n      text: newGweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewGweet(value);\r\n  };\r\n  return (\r\n    <div className=\"gweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"gweet\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your gweet\"\r\n              value={newGweet}\r\n              required\r\n              onChange={onChange}\r\n              className=\"factoryInput__input\"\r\n            />\r\n            <input type=\"submit\" value=\"Update gweet\"  className=\"formBtn margin10\"/>\r\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n              Cancel\r\n            </span>\r\n          </form>\r\n          \r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{gweetObj.name} &middot; {gweetObj.createdAt}</h4>\r\n          <p>{gweetObj.text}</p>\r\n          {gweetObj.attachmentUrl && <img src= {gweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n          <div class=\"gweet__actions\">\r\n            <span onClick={onDeleteClick}>\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </span>\r\n            <span onClick={toggleEditing}>\r\n              <FontAwesomeIcon icon={faPencilAlt} />\r\n            </span>\r\n          </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Gweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko';\r\n\r\nconst GweetFactory = ({userObj}) => {\r\n  const [gweet, setGweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async(event) =>{\r\n    if (gweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if(attachment !== \"\"){\r\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n      const respense = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await respense.ref.getDownloadURL();\r\n    }\r\n    const gweetObj = {\r\n      text: gweet,\r\n      name: userObj.displayName,\r\n      createdAt: moment().format('YYYY-MM-DD'),\r\n      date: Date.now(),\r\n      CreatorId: userObj.uid,\r\n      attachmentUrl\r\n    };\r\n    await dbService.collection(\"gweets\").add(gweetObj);\r\n    setGweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) =>{\r\n    const { \r\n      target:{value},\r\n    } = event;\r\n    setGweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {currentTarget:{result}} = finishedEvent;\r\n      setAttachment(result);\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return(\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input value={gweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} className=\"factoryInput__input\"/>\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input   \r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n          <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default GweetFactory;","import React, { useEffect, useState } from \"react\";\r\nimport { dbService  } from \"fbase\";\r\nimport Gweet from \"components/Gweet\";\r\nimport GweetFactory from \"components/GweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n  const [gweets, setGweets] = useState([]);\r\n  \r\n  useEffect(()=>{\r\n    dbService.collection(\"gweets\").onSnapshot(snapshot => {\r\n      const gweetArray = snapshot.docs.map(doc => ({\r\n        id:doc.id, \r\n        ...doc.data(),\r\n      }));\r\n      setGweets(gweetArray);\r\n    })\r\n  },[]);\r\n  return (\r\n    <div className=\"container\">\r\n      <GweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {gweets.map(gweet => (\r\n          <Gweet key={gweet.id} gweetObj={gweet} isOwner={gweet.CreatorId === userObj.uid} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n      <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            Home\r\n          </span>\r\n        </Link>\r\n      </li>\r\n      <li>  \r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n\r\n)\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService  } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}